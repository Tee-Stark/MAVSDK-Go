/*
 {{ indent(method_description, 1) }}

     {% if params -%}
     Parameters
     ----------
     {% for param in params %}
        {%- if param.type_info.is_primitive -%}
            {{ param.name.lower_camel_case }} {{ param.type_info.name }}
        {%- elif param.type_info.is_repeated -%}
            {{ param.name.lower_camel_case }} {{ param.type_info.name }} 
        {%- else -%} 
            {{ param.name.lower_camel_case }} *{{ param.type_info.name }} 
        {% endif -%}
     {% endfor %}
     {%- endif %}

     Returns
     -------
     {{return_type.is_repeated}}
     {{ return_name.upper_camel_case }} : {{ return_type.name }}
         {{ return_description }}
     {% if has_result -%}
     {%- endif %}
*/


func(s *ServiceImpl){{ name.upper_camel_case }}({% for param in params %}{%- if param.type_info.is_primitive -%}{{ param.name.lower_camel_case }} {{ param.type_info.name }}{%- elif param.type_info.is_repeated -%} {{ param.name.lower_camel_case }} {{ param.type_info.name }} {%- else -%} {{ param.name.lower_camel_case }} *{{ param.type_info.name }} {% endif %}{{ ", " if not loop.last }}{% endfor %}) ({%- if return_type.is_repeated -%}{{ return_type.name }} {%- elif return_type.is_primitive -%} {{ return_type.name }}  {%- else -%} *{{ return_type.name }} {%endif%}){
    request := &{{ name.upper_camel_case }}Request{}
    ctx:= context.Background()
     {% for param in params %}
        {%- if param.type_info.is_primitive -%}
    request.{{ param.name.upper_camel_case }} = {{ param.name.lower_camel_case }}
        {%- else -%}
    request.{{param.name.upper_camel_case}} = {{params.upper_camel_case}}
        {% endif %}
    {% endfor -%}
    response, err := s.Client.{{ name.upper_camel_case }}(ctx, request)
    if err != nil {
		fmt.Printf("Unable to subscribe to position grpc %v\n", err)
	}
    {% if has_result %}
    result := response.Get{{plugin_name.upper_camel_case}}Result()
    fmt.Printf("result %v\n",  result.String())
    if result.Result != {{ plugin_name.upper_camel_case }}Result_RESULT_SUCCESS{
        fmt.Printf("Error while getting {{name.upper_camel_case}}")
    }
    {% endif %}
    return response.Get{{ return_name.upper_camel_case }}()

}

   